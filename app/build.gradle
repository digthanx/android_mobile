plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
}

android {
    signingConfigs {
        release {
            storeFile file('/Users/nyama/Desktop/android/NyamaKey.jks')
            storePassword 'hiiamNyamailikecode'
            keyAlias 'thanksapp-release'
            keyPassword 'hiiamNyamailikecode'
        }
    }
    compileSdk 33

//    signingConfigs {
//        release {
//
//            keyAlias 'thanksapp_release'
//            keyPassword 'hiiamNyamailikecode'
//            storeFile file('C:\\Users\\dimam\\Desktop\\MobileDeveloper\\android_mobile\\key\\NyamaKey.jks')
//            storePassword 'hiiamNyamailikecode'
//        }
//    }

    defaultConfig {
        applicationId "com.teamforce.thanksapp"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            //signingConfig signingConfigs.release
            buildConfigField "String", "URL_PORT", "\"http://176.99.6.251:8889\""
            minifyEnabled false
            manifestPlaceholders = [appName: "ThanksApp"]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        getByName("debug"){
            applicationIdSuffix = ".debug"
            buildConfigField "String", "URL_PORT", "\"http://176.99.6.251:8888\""
            manifestPlaceholders = [appName: "Debug"]
        }
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
        //  compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.compose.get()
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    viewBinding {
        enabled = true
    }
}
dependencies {
    implementation 'com.google.firebase:firebase-messaging:20.1.0'


    // Library for Cropping Image
    implementation("com.vanniktech:android-image-cropper:4.4.0")


    // Stfa Icon Image Viewer
    implementation 'com.github.stfalcon-studio:StfalconImageViewer:v1.0.1'


    // Library from Rozov
    // reflection-based flavor
    implementation 'com.github.kirich1409:viewbindingpropertydelegate:1.5.6'

    // Paging
    def paging_version = "3.1.1"
    implementation("androidx.paging:paging-runtime:$paging_version")

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'

    //paging3
    implementation "androidx.paging:paging-runtime:3.1.1"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // Import the Firebase BoM
//    implementation platform(libs.firebase.bom)

    implementation platform('com.google.firebase:firebase-bom:30.5.0')

    // Add the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    //implementation libs.appcompat.v7
    implementation libs.compose.runtime
    implementation libs.constraint.layout
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation libs.firebase.analytics
    implementation libs.firebase.crashlytics
    implementation libs.kotlinx.coroutines.core
    implementation libs.lifecycle.livedata
    implementation libs.lifecycle.viewmodel
    implementation libs.lifecycle.runtime
    implementation libs.material
    implementation libs.okhttp
    implementation libs.okhttp.logging.interceptor
    implementation libs.recyclerview
    implementation libs.retrofit
    implementation libs.retrofit.converter.gson
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    testImplementation 'junit:junit:4.13.2'
    implementation "androidx.activity:activity-ktx:1.7.0-alpha02"


    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //hilt
    implementation 'com.google.dagger:hilt-android:2.42'
    kapt 'com.google.dagger:hilt-android-compiler:2.42'


    /*   implementation(libs.CORE_KTX)
       implementation(libs.APP_STARTUP)
       implementation(libs.PROFILE_INSTALLER)

       // UI
       implementation(libs.ACTIVITY_KTX)
       implementation(libs.APPCOMPAT)
       implementation(libs.FRAGMENT_KTX)
       implementation(libs.CARDVIEW)
       implementation(libs.BROWSER)
       implementation(libs.CONSTRAINT_LAYOUT)
       implementation(libs.DRAWER_LAYOUT)
       implementation(libs.MATERIAL)
       implementation(libs.FLEXBOX)
       implementation(libs.LOTTIE)
       implementation(libs.INK_PAGE_INDICATOR)
       implementation(libs.SLIDING_PANE_LAYOUT)

       // Architecture Components
       implementation(libs.LIFECYCLE_LIVE_DATA_KTX)
       implementation(libs.LIFECYCLE_RUNTIME_KTX)
       kapt(libs.LIFECYCLE_COMPILER)
       testImplementation(libs.ARCH_TESTING)
       implementation(libs.NAVIGATION_FRAGMENT_KTX)
       implementation(libs.NAVIGATION_UI_KTX)
       implementation(libs.ROOM_KTX)
       implementation(libs.ROOM_RUNTIME)
       kapt(libs.ROOM_COMPILER)
       testImplementation(libs.ROOM_KTX)
       testImplementation(libs.ROOM_RUNTIME)

       // Compose
       implementation(libs.ACTIVITY_COMPOSE)
       implementation(libs.COMPOSE_ANIMATION)
       implementation(libs.COMPOSE_MATERIAL)
       implementation(libs.COMPOSE_RUNTIME)
       implementation(libs.COMPOSE_THEME_ADAPTER)
       implementation(libs.COMPOSE_TOOLING)
       implementation(libs.VIEWMODEL_COMPOSE)
       implementation(libs.MDC_COMPOSE_THEME_ADAPTER)
       androidTestImplementation(libs.COMPOSE_TEST)

       // Dagger Hilt
       implementation(libs.HILT_ANDROID)
       androidTestImplementation(libs.HILT_TESTING)
       kapt(libs.HILT_COMPILER)
       kaptAndroidTest(libs.HILT_COMPILER)

       // DataStore
       implementation(libs.DATA_STORE_PREFERENCES)
       androidTestImplementation(libs.DATA_STORE_PREFERENCES)

       // Glide
       implementation(libs.GLIDE)
       kapt(libs.GLIDE_COMPILER)

       // Fabric and Firebase
       implementation(libs.FIREBASE_UI_AUTH)
       implementation(libs.CRASHLYTICS)

       // Date and time API for Java.
       implementation(libs.THREETENABP)
       testImplementation(libs.THREETENBP)

       // Kotlin
       implementation(libs.KOTLIN_STDLIB)

       // Instrumentation tests
       androidTestImplementation(libs.ESPRESSO_CORE)
       androidTestImplementation(libs.ESPRESSO_CONTRIB)
       androidTestImplementation(libs.EXT_JUNIT)
       androidTestImplementation(libs.RUNNER)
       androidTestImplementation(libs.RULES)
       androidTestImplementation(libs.FRAGMENT_TEST)
       debugImplementation(libs.FRAGMENT_TEST)

       // Local unit tests
       testImplementation(libs.JUNIT)
       testImplementation(libs.MOCKITO_CORE)
       testImplementation(libs.MOCKITO_KOTLIN)
       testImplementation(libs.HAMCREST)

       // Solve conflicts with gson. DataBinding is using an old version.
       implementation(libs.GSON)

       implementation(libs.ARCORE)*/
}